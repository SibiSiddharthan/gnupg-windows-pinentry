/* config.h.in.  Generated from configure.ac by autoheader.  */


#ifndef PINENTRY_CONFIG_H_INCLUDED
#define PINENTRY_CONFIG_H_INCLUDED

/* Enable gpg-error's strerror macro under W32CE.  */
#define GPG_ERR_ENABLE_ERRNO_MACROS 1



#ifndef GNUPG_CONFIG_H_INCLUDED
#define GNUPG_CONFIG_H_INCLUDED


/* The GUI pinentries should fall back to curses if X is not available. */
#cmakedefine FALLBACK_CURSES @FALLBACK_CURSES@

/* Nod nod */
#cmakedefine GCR_API_SUBJECT_TO_CHANGE @GCR_API_SUBJECT_TO_CHANGE@

/* version of the libassuan library */
#cmakedefine GNUPG_LIBASSUAN_VERSION @GNUPG_LIBASSUAN_VERSION@

/* Under WindowsCE we use the strerror replacement from libgpg-error. */
#cmakedefine GPG_ERR_ENABLE_ERRNO_MACROS @GPG_ERR_ENABLE_ERRNO_MACROS@

/* Under Windows we use the gettext code from libgpg-error */
#cmakedefine GPG_ERR_ENABLE_GETTEXT_MACROS @GPG_ERR_ENABLE_GETTEXT_MACROS@

/* Defined if the mlock() call does not work */
#cmakedefine HAVE_BROKEN_MLOCK @HAVE_BROKEN_MLOCK@

/* Defined if a `byte' is typedef'd */
#cmakedefine HAVE_BYTE_TYPEDEF @HAVE_BYTE_TYPEDEF@

/* Defined if we run on some of the PCDOS like systems (DOS, Windoze. OS/2)
   with special properties like no file modes */
#cmakedefine HAVE_DOSISH_SYSTEM @HAVE_DOSISH_SYSTEM@

/* Defined if the OS supports drive letters. */
#cmakedefine HAVE_DRIVE_LETTERS @HAVE_DRIVE_LETTERS@

/* Define if you have the iconv() function. */
#cmakedefine HAVE_ICONV @HAVE_ICONV@

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@

/* Define to 1 if you have the <langinfo.h> header file. */
#cmakedefine HAVE_LANGINFO_H @HAVE_LANGINFO_H@

/* Define to 1 if you have the `rt' library (-lrt). */
#cmakedefine HAVE_LIBRT @HAVE_LIBRT@

/* The pinentries should optionally cache the passphrase using libsecret. */
#cmakedefine HAVE_LIBSECRET @HAVE_LIBSECRET@

/* Define to 1 if you have the <locale.h> header file. */
#cmakedefine HAVE_LOCALE_H @HAVE_LOCALE_H@

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@

/* Defined if the system supports an mlock() call */
#cmakedefine HAVE_MLOCK @HAVE_MLOCK@

/* Define to 1 if you have the `mmap' function. */
#cmakedefine HAVE_MMAP @HAVE_MMAP@

/* Define if you have working ncursesw */
#cmakedefine HAVE_NCURSESW @HAVE_NCURSESW@

/* Define to 1 if you have the `plock' function. */
#cmakedefine HAVE_PLOCK @HAVE_PLOCK@

/* Define to 1 if you have the `seteuid' function. */
#cmakedefine HAVE_SETEUID @HAVE_SETEUID@

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H @HAVE_STDLIB_H@

/* Define to 1 if you have the `stpcpy' function. */
#cmakedefine HAVE_STPCPY @HAVE_STPCPY@

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H @HAVE_STRINGS_H@

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H @HAVE_STRING_H@

/* Define to 1 if you have the <sys/mman.h> header file. */
#cmakedefine HAVE_SYS_MMAN_H @HAVE_SYS_MMAN_H@

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@

/* Define to 1 if you have the <termio.h> header file. */
#cmakedefine HAVE_TERMIO_H @HAVE_TERMIO_H@

/* Defined if a `ulong' is typedef'd */
#cmakedefine HAVE_ULONG_TYPEDEF @HAVE_ULONG_TYPEDEF@

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@

/* Define to 1 if you have the <utime.h> header file. */
#cmakedefine HAVE_UTIME_H @HAVE_UTIME_H@

/* Defined if we run on WindowsCE */
#cmakedefine HAVE_W32CE_SYSTEM @HAVE_W32CE_SYSTEM@

/* Defined if we run on a W32 API based system */
#cmakedefine HAVE_W32_SYSTEM @HAVE_W32_SYSTEM@

/* Define to 1 if you have the <wchar.h> header file. */
#cmakedefine HAVE_WCHAR_H @HAVE_WCHAR_H@

/* Define as const if the declaration of iconv() needs const. */
#cmakedefine ICONV_CONST @ICONV_CONST@

/* The GUI pinentries should respect INSIDE_EMACS envvar. */
#cmakedefine INSIDE_EMACS @INSIDE_EMACS@

/* Name of package */
#cmakedefine PACKAGE @PACKAGE@

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME @PACKAGE_NAME@

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING @PACKAGE_STRING@

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME @PACKAGE_TARNAME@

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL @PACKAGE_URL@

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION @PACKAGE_VERSION@

/* The Curses version of Pinentry is to be build */
#cmakedefine PINENTRY_CURSES @PINENTRY_CURSES@

/* The Emacs version of Pinentry is to be build */
#cmakedefine PINENTRY_EMACS @PINENTRY_EMACS@

/* The qt version of Pinentry is to be build */
#cmakedefine PINENTRY_QT @PINENTRY_QT@

/* The TTY version of Pinentry is to be build */
#cmakedefine PINENTRY_TTY @PINENTRY_TTY@

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS @STDC_HEADERS@

/* The capabilities support library is installed */
#cmakedefine USE_CAPABILITIES @USE_CAPABILITIES@

/* Set this to limit filenames to the 8.3 format */
#cmakedefine USE_ONLY_8DOT3 @USE_ONLY_8DOT3@

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif


/* Version number of package */
#cmakedefine VERSION @VERSION@

/* Define to 1 if on MINIX. */
#cmakedefine _MINIX @_MINIX@

/* Define to 2 if the system does not provide POSIX.1 features except with
   this defined. */
#cmakedefine _POSIX_1_SOURCE @_POSIX_1_SOURCE@

/* Define to 1 if you need to in order for `stat' and other things to work. */
#cmakedefine _POSIX_SOURCE @_POSIX_SOURCE@

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT32_T @_UINT32_T@

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint32_t @uint32_t@


#endif /*PINENTRY_CONFIG_H_INCLUDED*/



#ifdef GPG_ERR_SOURCE_DEFAULT
# error GPG_ERR_SOURCE_DEFAULT already defined
#endif
#define GPG_ERR_SOURCE_DEFAULT  GPG_ERR_SOURCE_PINENTRY
#endif /*GNUPG_CONFIG_H_INCLUDED*/

#ifdef _WIN32
# define ssize_t int
# define strncasecmp _strnicmp
# define STDIN_FILENO 0
# define STDOUT_FILENO 1
#endif